MODULE main
	
	VAR
		livro: {disponivel, reservado, atrasado};
		multa_pendente: boolean;
		requisitado: boolean;
	
	ASSIGN
		
		init(livro) := disponivel;
		init(multa_pendente) := FALSE;
		init(requisitado) := FALSE;

		next(livro) := 
			case
				-- casos base
				(livro = disponivel) & (requisitado = TRUE): {reservado};
				(livro = atrasado) & (requisitado = TRUE): {atrasado};
				(livro = reservado) & (requisitado = TRUE): {reservado};

				-- casos para entrega
				(livro = reservado) & (multa_pendente = TRUE): {atrasado};
				(livro = reservado) & (multa_pendente = FALSE): {disponivel};

				-- casos para atrasado
				(livro = atrasado) & (multa_pendente = FALSE): {disponivel};
				(livro = atrasado) & (multa_pendente = TRUE): {atrasado};

				TRUE: {disponivel, reservado, atrasado}; -- nao muda nada
			esac;
		
		next(multa_pendente) := 
			case
				multa_pendente = FALSE: {FALSE};
				multa_pendente = TRUE: {TRUE, FALSE};
			esac;

SPEC AF(livro = disponivel & requisitado = TRUE -> livro = reservado)
SPEC AF(livro = disponivel & requisitado = FALSE -> livro = disponivel)
SPEC AF(livro = reservado  & multa_pendente = TRUE -> livro = atrasado)
SPEC AF(livro = reservado & multa_pendente = FALSE -> livro = disponivel)
SPEC AF(livro = atrasado & multa_pendente = TRUE -> livro = atrasado)
SPEC AF(livro = atrasado & multa_pendente = FALSE -> livro = disponivel)
SPEC AF(livro = disponivel -> multa_pendente = FALSE)
SPEC AF!(livro = disponivel & requisitado = FALSE -> livro = reservado)